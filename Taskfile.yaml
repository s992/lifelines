version: "3"

tasks:
  default:
    silent: true
    cmds:
      - task -l

  run:
    desc: Runs backend and frontend
    cmds:
      - npx concurrently "task run-go" "task run-js"

  run-go:
    desc: Runs backend server
    env:
      LIFELINES_DB_DIR: /tmp
      LIFELINES_PORT: 8080
    cmds:
      - go run main.go

  run-js:
    desc: Runs frontend
    cmds:
      - npm run dev

  deps:
    desc: Runs all dependency targets
    deps:
      - deps-go
      - deps-js

  deps-go:
    desc: Runs go mod tidy
    cmds:
      - go mod tidy

  deps-js:
    desc: Runs npm install
    cmds:
      - npm i

  gen:
    desc: Runs all codegen targets
    deps:
      - task: gen-sqlc
      - task: gen-proto

  gen-sqlc:
    desc: Generates db code with sqlc
    cmds:
      - rm -rf ./internal/generated/db
      - podman run --rm -v $(pwd):/src -w /src docker.io/sqlc/sqlc generate

  gen-proto:
    desc: Generates proto code with buf
    cmds:
      - rm -rf ./internal/generated/proto
      - rm -rf ./client/generated/proto
      - npx buf generate proto

  lint:
    desc: Runs all lint targets
    deps:
      - lint-proto
      - lint-js

  lint-proto:
    desc: Lints proto files
    cmds:
      - npx buf lint proto

  lint-js:
    desc: Lints client code
    cmds:
      - npm run lint

  docker-build:
    desc: Builds local docker image
    cmds:
      - podman build . -t s992/lifelines:local

  docker-run:
    desc: Runs local docker image
    deps:
      - task: docker-build
    cmds:
      - podman run --rm -p 8080:80 localhost/s992/lifelines:local
